// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model board {
  id             String  @id @default(uuid())
  organizationId String
  name           String
  imageUrl       String
  favorite       Boolean @default(false)
  lists          list[]
}

model list {
  id      String @id @default(uuid())
  boardId String
  board   board  @relation(fields: [boardId], references: [id], onDelete: Cascade)
  name    String
  order   Int
  cards   card[]

  @@index([boardId])
}

model card {
  id          String    @id @default(uuid())
  columnId    String
  column      list      @relation(fields: [columnId], references: [id], onDelete: Cascade)
  name        String
  description String?
  order       Int
  comments    Comment[]

  @@index([columnId])
}

model Comment {
  id        String    @id @default(uuid())
  cardId    String
  card      card      @relation(fields: [cardId], references: [id], onDelete: Cascade)
  content   String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  parentId  String?
  parent    Comment?  @relation("parentChild", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  children  Comment[] @relation("parentChild")
  userId    String
  userImage String    @db.Text
  userName  String    @db.Text

  @@index([cardId])
  @@index([parentId])
}
